{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "description": "Meshtastic Nodes from InfluxDB",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 32,
    "links": [],
    "panels": [
      {
        "datasource": {
          "default": false,
          "type": "influxdb",
          "uid": "a8WXhOlnk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 18,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "id": 1,
        "interval": "1m",
        "maxDataPoints": 500,
        "options": {
          "basemap": {
            "config": {},
            "name": "Layer 0",
            "type": "osm-standard"
          },
          "controls": {
            "mouseWheelZoom": true,
            "showAttribution": true,
            "showDebug": false,
            "showMeasure": false,
            "showScale": false,
            "showZoom": true
          },
          "layers": [
            {
              "config": {
                "blur": 19,
                "radius": 7,
                "weight": {
                  "fixed": 1,
                  "max": 1,
                  "min": 0
                }
              },
              "location": {
                "mode": "auto"
              },
              "name": "Layer 2",
              "opacity": 0.1,
              "tooltip": false,
              "type": "heatmap"
            },
            {
              "config": {
                "showLegend": true,
                "style": {
                  "color": {
                    "fixed": "dark-red"
                  },
                  "opacity": 0.7,
                  "rotation": {
                    "fixed": 0,
                    "max": 360,
                    "min": -360,
                    "mode": "mod"
                  },
                  "size": {
                    "fixed": 6,
                    "max": 15,
                    "min": 2
                  },
                  "symbol": {
                    "fixed": "img/icons/marker/circle.svg",
                    "mode": "fixed"
                  },
                  "text": {
                    "field": "short_name",
                    "fixed": "",
                    "mode": "field"
                  },
                  "textConfig": {
                    "fontSize": 8,
                    "offsetX": 0,
                    "offsetY": 12,
                    "textAlign": "center",
                    "textBaseline": "middle"
                  }
                }
              },
              "filterData": {
                "id": "byRefId",
                "options": "A"
              },
              "location": {
                "latitude": "pos_latitude",
                "longitude": "pos_longitude",
                "mode": "coords"
              },
              "name": "Layer 1",
              "opacity": 1,
              "tooltip": true,
              "type": "markers"
            }
          ],
          "tooltip": {
            "mode": "details"
          },
          "view": {
            "allLayers": true,
            "id": "coords",
            "lat": 58.7,
            "lon": 25,
            "zoom": 8
          }
        },
        "pluginVersion": "11.2.0-189033",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "a8WXhOlnk"
            },
            "query": "//import \"timezone\"\r\nimport \"join\"\r\nimport \"math\"\r\nimport \"date\"\r\n//option location = timezone.fixed(offset: ${TimeZone})\r\n\r\nbucket1 = from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"${NodeIdentifier}\"] =~ /${Node:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"pos_latitude\" or r[\"_field\"] == \"pos_longitude\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey:[\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"${NodeIdentifier}\"])\r\n  |> map(fn: (r) => ({r with short_name: r.${DisplayName}}))\r\n  //|> yield(name: \"original\")\r\n\r\n//bucket2 = from(bucket: \"${InfluxBucket_ds}\")\r\n//  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n//  |> filter(fn: (r) => r[\"entity_id\"] =~ /${person:regex}/)\r\n//  |> filter(fn: (r) => r[\"_field\"] == \"latitude\" or r[\"_field\"] == \"longitude\")\r\n//  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n//  |> pivot(rowKey:[\"_time\"], columnKey:[\"_field\"], valueColumn: \"_value\")\r\n//  |> group()\r\n\r\ndata = bucket1\r\n  |> sort(columns: [\"${NodeIdentifier}\", \"_time\"])\r\n\r\n//data = union(tables: [bucket1, bucket2])\r\n//  |> sort(columns: [\"friendly_name\", \"_time\"])\r\n  //|> yield(name: \"original\")\r\n\r\ndatadiff = data\r\n  |> difference(columns: [\"pos_longitude\", \"pos_latitude\"])\r\n  |> map(fn: (r) => ({r with \r\n     aDiff: math.abs(x: r.pos_longitude),\r\n     bDiff: math.abs(x: r.pos_latitude)\r\n     }))\r\n  |> drop(columns: [\"pos_longitude\", \"pos_latitude\"])\r\n  //|> yield()\r\n\r\ndatafinal = join.tables(method: \"inner\", left: data, right: datadiff, on: (l, r) => l._time == r._time, as: (l, r) => ({l with latdiff: r.aDiff, londiff: r.bDiff}),)\r\n  |> filter(fn: (r) => r._time > date.truncate(t: now(), unit: 30m) or r.latdiff >= 0.007 or r.londiff >= 0.007)\r\n  |> group()\r\n  |> yield(name: \"final\")",
            "refId": "A"
          }
        ],
        "title": "Panel Title",
        "type": "geomap"
      },
      {
        "datasource": {
          "default": false,
          "type": "influxdb",
          "uid": "a8WXhOlnk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "barWidthFactor": 0.6,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "snr"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${__field.labels.short_name}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 0
        },
        "id": 4,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "a8WXhOlnk"
            },
            "query": "//import \"timezone\"\r\nimport \"join\"\r\nimport \"math\"\r\nimport \"date\"\r\n//option location = timezone.fixed(offset: ${TimeZone})\r\n\r\nbucket1 = from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"${NodeIdentifier}\"] =~ /${Node:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey:[\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({r with short_name: r.${DisplayName}}))\r\n  |> yield(name: \"data\")\r\n",
            "refId": "A"
          }
        ],
        "title": "SNR",
        "type": "timeseries"
      },
      {
        "datasource": {
          "default": false,
          "type": "influxdb",
          "uid": "a8WXhOlnk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "barWidthFactor": 0.6,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "channel_utilization"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${__field.labels.short_name}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 9
        },
        "id": 2,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "a8WXhOlnk"
            },
            "query": "//import \"timezone\"\r\nimport \"join\"\r\nimport \"math\"\r\nimport \"date\"\r\n//option location = timezone.fixed(offset: ${TimeZone})\r\n\r\nbucket1 = from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"${NodeIdentifier}\"] =~ /${Node:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"channel_utilization\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey:[\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({r with short_name: r.${DisplayName}}))\r\n  |> yield(name: \"data\")\r\n",
            "refId": "A"
          }
        ],
        "title": "Channel Utilization",
        "type": "timeseries"
      },
      {
        "datasource": {
          "default": false,
          "type": "influxdb",
          "uid": "a8WXhOlnk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "barWidthFactor": 0.6,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "air_util_tx"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${__field.labels.short_name}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 18
        },
        "id": 5,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "a8WXhOlnk"
            },
            "query": "//import \"timezone\"\r\nimport \"join\"\r\nimport \"math\"\r\nimport \"date\"\r\n//option location = timezone.fixed(offset: ${TimeZone})\r\n\r\nbucket1 = from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"${NodeIdentifier}\"] =~ /${Node:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"air_util_tx\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey:[\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({r with short_name: r.${DisplayName}}))\r\n  |> yield(name: \"data\")\r\n",
            "refId": "A"
          }
        ],
        "title": "Air Utilization TX",
        "type": "timeseries"
      },
      {
        "datasource": {
          "default": false,
          "type": "influxdb",
          "uid": "a8WXhOlnk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "axisSoftMax": 100,
              "axisSoftMin": 0,
              "barAlignment": 0,
              "barWidthFactor": 0.6,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "battery_level"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${__field.labels.short_name}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 12,
          "y": 18
        },
        "id": 6,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "a8WXhOlnk"
            },
            "query": "//import \"timezone\"\r\nimport \"join\"\r\nimport \"math\"\r\nimport \"date\"\r\n//option location = timezone.fixed(offset: ${TimeZone})\r\n\r\nbucket1 = from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"${NodeIdentifier}\"] =~ /${Node:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"battery_level\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey:[\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({r with short_name: r.${DisplayName}}))\r\n  |> yield(name: \"data\")\r\n",
            "refId": "A"
          }
        ],
        "title": "Battery",
        "type": "timeseries"
      },
      {
        "datasource": {
          "default": false,
          "type": "influxdb",
          "uid": "a8WXhOlnk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [
              {
                "options": {
                  "0": {
                    "index": 0,
                    "text": "Not Licensed"
                  },
                  "1": {
                    "index": 1,
                    "text": "Licensed"
                  }
                },
                "type": "value"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "green",
                  "value": 1
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "is_licensed"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${__field.labels.short_name}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 18,
          "y": 18
        },
        "id": 3,
        "options": {
          "displayMode": "basic",
          "maxVizHeight": 300,
          "minVizHeight": 16,
          "minVizWidth": 8,
          "namePlacement": "top",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "sizing": "auto",
          "valueMode": "color"
        },
        "pluginVersion": "11.2.0-189033",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "a8WXhOlnk"
            },
            "query": "//import \"timezone\"\r\nimport \"join\"\r\nimport \"math\"\r\nimport \"date\"\r\n//option location = timezone.fixed(offset: ${TimeZone})\r\n\r\nbucket1 = from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"${NodeIdentifier}\"] =~ /${Node:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"is_licensed\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey:[\"_field\"], valueColumn: \"_value\")\r\n  |> drop(columns: [\"_time\"])\r\n  |> map(fn: (r) => ({r with short_name: r.${DisplayName}}))\r\n  |> yield(name: \"data\")\r\n",
            "refId": "A"
          }
        ],
        "title": "Licensed radios",
        "type": "bargauge"
      }
    ],
    "refresh": "1m",
    "schemaVersion": 39,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "influxdb",
            "uid": "a8WXhOlnk"
          },
          "definition": "from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"${Measurement}\")\r\n  |> keyValues(keyColumns: [\"${NodeIdentifier}\"])\r\n  |> group()\r\n  |> keep(columns: [\"${NodeIdentifier}\"])\r\n  |> distinct(column: \"${NodeIdentifier}\")\r\n\r\n",
          "hide": 0,
          "includeAll": true,
          "multi": true,
          "name": "Node",
          "options": [],
          "query": {
            "query": "from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"${Measurement}\")\r\n  |> keyValues(keyColumns: [\"${NodeIdentifier}\"])\r\n  |> group()\r\n  |> keep(columns: [\"${NodeIdentifier}\"])\r\n  |> distinct(column: \"${NodeIdentifier}\")\r\n\r\n"
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "python-scraping",
            "value": "python-scraping"
          },
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Bucket",
          "options": [
            {
              "selected": true,
              "text": "python-scraping",
              "value": "python-scraping"
            }
          ],
          "query": "python-scraping",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": true,
            "text": "long_name",
            "value": "long_name"
          },
          "description": "Search nodes",
          "hide": 0,
          "includeAll": false,
          "label": "Node Identifier",
          "multi": false,
          "name": "NodeIdentifier",
          "options": [
            {
              "selected": false,
              "text": "short_name",
              "value": "short_name"
            },
            {
              "selected": true,
              "text": "long_name",
              "value": "long_name"
            },
            {
              "selected": false,
              "text": "mac_address",
              "value": "mac_address"
            },
            {
              "selected": false,
              "text": "id",
              "value": "id"
            },
            {
              "selected": false,
              "text": "hw_model",
              "value": "hw_model"
            }
          ],
          "query": "short_name, long_name, mac_address, id, hw_model",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "meshtastic_node",
            "value": "meshtastic_node"
          },
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Measurement",
          "options": [
            {
              "selected": true,
              "text": "meshtastic_node",
              "value": "meshtastic_node"
            }
          ],
          "query": "meshtastic_node",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": true,
            "text": "long_name",
            "value": "long_name"
          },
          "description": "Sets name in graphs, 1st value is linked to Node Identifier",
          "hide": 0,
          "includeAll": false,
          "label": "Display Name",
          "multi": false,
          "name": "DisplayName",
          "options": [
            {
              "selected": true,
              "text": "long_name",
              "value": "long_name"
            },
            {
              "selected": false,
              "text": "short_name",
              "value": "short_name"
            },
            {
              "selected": true,
              "text": "long_name",
              "value": "long_name"
            },
            {
              "selected": false,
              "text": "mac_address",
              "value": "mac_address"
            },
            {
              "selected": false,
              "text": "id",
              "value": "id"
            }
          ],
          "query": "${NodeIdentifier}, short_name, long_name, mac_address, id",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        }
      ]
    },
    "time": {
      "from": "now-30m",
      "to": "now"
    },
    "timepicker": {
      "refresh_intervals": [
        "30s",
        "1m",
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ]
    },
    "timezone": "browser",
    "title": "MeshFlux",
    "uid": "edtn8dsmwyt4wf",
    "version": 30,
    "weekStart": ""
  }